
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       8082; // IP + port on which the server should listen (no IP here = any IP). Rq: IP = internal IP (usually only one)
        server_name  localhosts; // HOST field of the HTTP request ("example.com"). Rq: example.com -> will be sent to port 80 of the server corresponding to this domain name (= DNS resolution). We can write example.com:port if we want to send to another port that the server listens to

        #charset koi8-r;

        #access_log  logs/host.access.log  main;
        autoindex on; #requests ending with "/": if no index file is found, returns an autoindex (instead of 404). ex: test with url ending with folder/
        root   /Users/bbrunet/.brew/var/www;
        location / {
            root   /Users/bbrunet/.brew/var/www;
            index  readme.html truc.machin; #requests ending with "/": will try to find an index file among the list, and then redirect to uri/index_file. index.html a default "index" (no need to add it)
        }
        location /bla/ {
            root   /Users/bbrunet/.brew/var/www/folder/;
        }
        location /blo/ {
            root   /Users/bbrunet/.brew/var/www/folder/;
            limit_except POST { deny all; } #GET method not allowed in this location block (only POST is allowed). 403 error will be sent
        }

        error_page  404              /40x.html;

        error_page   500 502 503 504 413  /50x.html;

        client_max_body_size 1; #concerne la taille du "body" de la request -> les GET n'ont pas de body, donc pas concernees, contrairement aux POST

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}
    include servers/*;
}
